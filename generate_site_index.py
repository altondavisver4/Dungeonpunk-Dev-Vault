#!/usr/bin/env python3
import os, urllib.parse
from datetime import datetime

ROOT = os.getcwd()
IGNORE_DIRS = {'.git', '.github', 'node_modules', 'dist', 'build', '__pycache__', '.obsidian'}
IGNORE_FILES = {'_headers', 'robots.txt', 'site.css'}
CONTENT_EXTS = {'.md', '.markdown', '.txt', '.html', '.htm', '.pdf', '.png', '.jpg', '.jpeg', '.gif', '.webp', '.mp3', '.wav', '.ogg'}

TEMPLATE = """<!doctype html>
<html lang='en'>
<meta charset='utf-8'>
<meta name='viewport' content='width=device-width,initial-scale=1'>
<link rel='stylesheet' href='{relprefix}site.css'>
<meta name='robots' content='noindex,nofollow'>
<title>{title}</title>
<body>
<header>
  <h1>{title}</h1>
  <div class='meta'>Auto-generated {ts} UTC</div>
  {breadcrumbs}
</header>
<main>
<section>
  <h2>Folders</h2>
  {folders}
</section>
<section>
  <h2>Files</h2>
  {files}
</section>
</main>
<footer>
  <div class='foot'>Generated by generate_site_index.py</div>
</footer>
</body>
</html>"""

def url_for(rel_path):
    parts = rel_path.replace('\\','/').split('/')
    enc = '/'.join(urllib.parse.quote(p, safe='()&-._~ ' ).replace(' ', '%20') for p in parts)
    return '/' + enc

def breadcrumbs(rel_path):
    if not rel_path:
        return ''
    parts = rel_path.replace('\\','/').split('/')
    trail = ["<nav class='crumbs'><a href='/'>Root</a>"]
    acc = []
    for p in parts:
        acc.append(p)
        href = url_for('/'.join(acc) + '/index.html')
        trail.append(f" / <a href='{href}'>{p}</a>")
    trail.append("</nav>")
    return ''.join(trail)

def list_dir(abs_path, rel_path):
    try:
        entries = sorted(os.listdir(abs_path), key=str.lower)
    except FileNotFoundError:
        return '<p class=\"muted\">None</p>','<p class=\"muted\">None</p>'
    folders, files = [], []
    for name in entries:
        if name in IGNORE_FILES:
            continue
        full = os.path.join(abs_path, name)
        rel  = os.path.join(rel_path, name) if rel_path else name
        if os.path.isdir(full):
            if name in IGNORE_DIRS:
                continue
            folders.append(f"<li><a href='{url_for(rel + '/index.html')}'>{name}/</a></li>")
        else:
            ext = os.path.splitext(name)[1].lower()
            if ext in CONTENT_EXTS or name.lower() == 'index.html':
                files.append(f"<li><a href='{url_for(rel)}'>{name}</a></li>")
    f_html = '<ul class=\"cols\">' + ''.join(folders) + '</ul>' if folders else '<p class=\"muted\">None</p>'
    fi_html = '<ul class=\"cols\">' + ''.join(files) + '</ul>' if files else '<p class=\"muted\">None</p>'
    return f_html, fi_html

def relprefix(rel_path):
    if not rel_path:
        return ''
    ups = len(rel_path.replace('\\','/').split('/'))
    return '../' * ups

def write_index(abs_path, rel_path):
    html = TEMPLATE.format(
        title = 'Index â€” ' + (rel_path if rel_path else 'Root'),
        ts = datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S'),
        relprefix = relprefix(rel_path),
        breadcrumbs = breadcrumbs(rel_path),
        folders = list_dir(abs_path, rel_path)[0],
        files = list_dir(abs_path, rel_path)[1],
    )
    with open(os.path.join(abs_path, 'index.html'), 'w', encoding='utf-8') as f:
        f.write(html)

def main():
    for dirpath, dirnames, filenames in os.walk(ROOT):
        dirnames[:] = [d for d in dirnames if d not in IGNORE_DIRS]
        rel = os.path.relpath(dirpath, ROOT)
        if rel == '.': rel = ''
        write_index(dirpath, rel)
    print('Wrote index.html for root and all subfolders.')

if __name__ == '__main__':
    main()
